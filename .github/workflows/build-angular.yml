name: CLI Workspace CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test Angular Workspace
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Lint the code
      #- name: Lint the code
      #  run: npm run lint

      # Step 5: Run tests
      #- name: Run tests
      #  run: npm test

      # Step 6: Build applications and libraries
      - name: Build all projects
        run: npm run "build all"

  deploy:
    name: Deploy libraries
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"
          registry-url: https://registry.npmjs.org/

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build applications and libraries
      - name: Build all projects
        run: npm run "build all"

      # Step 5: Replace README.md in main libraries
      - name: Replace README.md in main libraries
        run: |
          cp README.md dist/cli/
          cp README.md dist/core/

      # Step 6: Publish to NPM
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Define an array of library names to publish: "lib1" "lib2"
          LIBRARIES=("core" "cli" "guid" "server-logs" "text-to-image")

          ls dist

          for LIB_NAME in "${LIBRARIES[@]}"; do
            DIR="./dist/$LIB_NAME"
            if [ -f "$DIR/package.json" ]; then
              echo "Publishing $LIB_NAME..."
              cd $DIR
              npm publish --access public || echo "Failed to publish $LIB_NAME, skipping..."
              cd ../..
            else
              echo "Skipping $LIB_NAME: package.json not found in $DIR"
              ls
            fi
          done
